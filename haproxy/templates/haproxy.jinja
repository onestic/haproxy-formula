# HAProxy configuration
#
# **** DO NOT EDIT THIS FILE ****
#
# This file is managed by Salt.
# Any changes will be overwritten.

{% macro render_server(server) -%}
server {{ server.name }} {{ server.host }}:{{ server.port }} {{ server.check }} 
{%- for parameter, value in server.iteritems() -%}
{%- if parameter != 'name' and 
    parameter != 'host' and 
    parameter != 'port' and 
    parameter != 'check' %} {{ parameter }} {{ value }}
{%- endif -%}
{%- endfor -%}
{%- endmacro -%}

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log /dev/log    local0
    log /dev/log    local1 notice
    user {{ salt['pillar.get']('haproxy:global:user', 'haproxy') }}
    group {{ salt['pillar.get']('haproxy:global:group', 'haproxy') }}
    tune.bufsize {{ salt['pillar.get']('haproxy:global:tunebufsize', '16384') }}
{%- if salt['pillar.get']('haproxy:global:chroot:enable', 'no') == True %}
    chroot  {{ salt['pillar.get']('haproxy:global:chroot:path', '/tmp') }}
{%- endif -%}
{% if salt['pillar.get']('haproxy:global:daemon', 'no') == True %}
    daemon
{% endif %}
{%- if salt['pillar.get']('haproxy:global:stats:enable', 'no') == True %}
    #Stats support is currently limited to socket mode
    stats socket {{ salt['pillar.get']('haproxy:global:stats:socketpath', '/tmp/ha_stats.sock') }}
 {% endif %}

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log {{ salt['pillar.get']('haproxy:defaults:log') }}
    mode {{ salt['pillar.get']('haproxy:defaults:mode') }}
    retries {{ salt['pillar.get']('haproxy:defaults:retries') }}
{%- if 'options' in salt['pillar.get']('haproxy:defaults', {}) %}
{%- for option in salt['pillar.get']('haproxy:defaults:options') %}
    option {{ option }}{% endfor %}
{% endif %}
{%- if 'timeouts' in salt['pillar.get']('haproxy:defaults', {}) %}
{%- for timeout in salt['pillar.get']('haproxy:defaults:timeouts') %}
    timeout {{ timeout }}{% endfor %}
{% endif %}
{%- if 'errorfiles' in salt['pillar.get']('haproxy:defaults', {}) %}
{%- for errorfile in salt['pillar.get']('haproxy:defaults:errorfiles').iteritems() %}
    errorfile {{ errorfile[0] }} {{ errorfile[1] }}{% endfor %}
{% endif %}




#---------------------------------------------------------------------
# frontend instances
#---------------------------------------------------------------------
{%- if 'frontends' in salt['pillar.get']('haproxy', {}) %}
{%- for frontend in salt['pillar.get']('haproxy:frontends', {}).iteritems() %}
frontend {{ frontend[1].name }}
    bind {{ frontend[1].bind }}
{%- if 'acls' in frontend[1] %}
{%- for acl in frontend[1].acls %}
    acl {{ acl }}
{%- endfor %}
{%- endif %}
{%- if 'reqadd' in frontend[1] %}
{%- for reqadd in frontend[1].reqadd %}
    reqadd {{ reqadd }}
{%- endfor %}
{%- endif %}
    default_backend {{ frontend[1].default_backend }}
{%-if 'use_backends' in frontend[1] -%}
{%- for use_backend in frontend[1].use_backends %}
    use_backend {{ use_backend }}
{% endfor %}
{%- endif %}
{% endfor %}
{%- endif %}


#---------------------------------------------------------------------
# backend instances
#---------------------------------------------------------------------
{%- if 'backends' in salt['pillar.get']('haproxy', {}) %}
{%- for backend in salt['pillar.get']('haproxy:backends', {}).iteritems() %}
backend {{ backend[1].name }}
    balance {{ backend[1].balance }}
    {%- if 'options' in backend[1] %}
    {%- for option in backend[1].options %}
    option {{ option }}
    {%- endfor %}
    {%- endif %}
    {%- if 'cookie' in backend[1] %}
    cookie {{ backend[1].cookie }}
    {%- endif %}
    {%- if 'stats' in backend[1] %}
    {%- for option, value in backend[1].stats.iteritems() %}
    {%- if option == 'enable' and value %}
    stats enable
    {%- else %}
    stats {{ option }} {{ value }}
    {%- endif %}
    {%- endfor %}
    {%- endif %}
    {%- if 'servers' in backend[1] %}
    {%- for server in backend[1].servers.iteritems() %}
    {{ render_server(server[1]) }}
    {%- endfor %}
    {%- endif %}
{% endfor %}
{% endif %}
